import ***REMOVED*** regExpToken, SPACE } from '../tokenTypes'

const FLEX_WRAP = regExpToken(/(nowrap|wrap|wrap-reverse)/)
const FLEX_DIRECTION = regExpToken(/(row|row-reverse|column|column-reverse)/)

const defaultFlexWrap = 'nowrap'
const defaultFlexDirection = 'row'

export default tokenStream => ***REMOVED***
  let flexWrap
  let flexDirection

  let partsParsed = 0
  while (partsParsed < 2 && tokenStream.hasTokens()) ***REMOVED***
    if (partsParsed !== 0) tokenStream.expect(SPACE)

    if (flexWrap === undefined && tokenStream.matches(FLEX_WRAP)) ***REMOVED***
      flexWrap = tokenStream.lastValue
  ***REMOVED*** else if (
      flexDirection === undefined &&
      tokenStream.matches(FLEX_DIRECTION)
    ) ***REMOVED***
      flexDirection = tokenStream.lastValue
  ***REMOVED*** else ***REMOVED***
      tokenStream.throw()
  ***REMOVED***

    partsParsed += 1
***REMOVED***

  tokenStream.expectEmpty()

  if (flexWrap === undefined) flexWrap = defaultFlexWrap
  if (flexDirection === undefined) flexDirection = defaultFlexDirection

  return ***REMOVED*** flexWrap, flexDirection }
}
