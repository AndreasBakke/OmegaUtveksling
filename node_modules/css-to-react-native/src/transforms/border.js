import ***REMOVED***
  regExpToken,
  NONE,
  COLOR,
  LENGTH,
  UNSUPPORTED_LENGTH_UNIT,
  SPACE,
} from '../tokenTypes'

const BORDER_STYLE = regExpToken(/^(solid|dashed|dotted)$/)

const defaultBorderWidth = 1
const defaultBorderColor = 'black'
const defaultBorderStyle = 'solid'

export default tokenStream => ***REMOVED***
  let borderWidth
  let borderColor
  let borderStyle

  if (tokenStream.matches(NONE)) ***REMOVED***
    tokenStream.expectEmpty()
    return ***REMOVED*** borderWidth: 0, borderColor: 'black', borderStyle: 'solid' }
***REMOVED***

  let partsParsed = 0
  while (partsParsed < 3 && tokenStream.hasTokens()) ***REMOVED***
    if (partsParsed !== 0) tokenStream.expect(SPACE)

    if (
      borderWidth === undefined &&
      tokenStream.matches(LENGTH, UNSUPPORTED_LENGTH_UNIT)
    ) ***REMOVED***
      borderWidth = tokenStream.lastValue
  ***REMOVED*** else if (borderColor === undefined && tokenStream.matches(COLOR)) ***REMOVED***
      borderColor = tokenStream.lastValue
  ***REMOVED*** else if (borderStyle === undefined && tokenStream.matches(BORDER_STYLE)) ***REMOVED***
      borderStyle = tokenStream.lastValue
  ***REMOVED*** else ***REMOVED***
      tokenStream.throw()
  ***REMOVED***

    partsParsed += 1
***REMOVED***

  tokenStream.expectEmpty()

  if (borderWidth === undefined) borderWidth = defaultBorderWidth
  if (borderColor === undefined) borderColor = defaultBorderColor
  if (borderStyle === undefined) borderStyle = defaultBorderStyle

  return ***REMOVED*** borderWidth, borderColor, borderStyle }
}
