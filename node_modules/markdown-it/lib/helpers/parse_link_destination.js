// Parse link destination
//
'use strict';


var unescapeAll = require('../common/utils').unescapeAll;


module.exports = function parseLinkDestination(str, pos, max) ***REMOVED***
  var code, level,
      lines = 0,
      start = pos,
      result = ***REMOVED***
        ok: false,
        pos: 0,
        lines: 0,
        str: ''
    ***REMOVED***;

  if (str.charCodeAt(pos) === 0x3C /* < */) ***REMOVED***
    pos++;
    while (pos < max) ***REMOVED***
      code = str.charCodeAt(pos);
      if (code === 0x0A /* \n */) ***REMOVED*** return result; }
      if (code === 0x3C /* < */) ***REMOVED*** return result; }
      if (code === 0x3E /* > */) ***REMOVED***
        result.pos = pos + 1;
        result.str = unescapeAll(str.slice(start + 1, pos));
        result.ok = true;
        return result;
    ***REMOVED***
      if (code === 0x5C /* \ */ && pos + 1 < max) ***REMOVED***
        pos += 2;
        continue;
    ***REMOVED***

      pos++;
  ***REMOVED***

    // no closing '>'
    return result;
***REMOVED***

  // this should be ... } else ***REMOVED*** ... branch

  level = 0;
  while (pos < max) ***REMOVED***
    code = str.charCodeAt(pos);

    if (code === 0x20) ***REMOVED*** break; }

    // ascii control characters
    if (code < 0x20 || code === 0x7F) ***REMOVED*** break; }

    if (code === 0x5C /* \ */ && pos + 1 < max) ***REMOVED***
      if (str.charCodeAt(pos + 1) === 0x20) ***REMOVED*** break; }
      pos += 2;
      continue;
  ***REMOVED***

    if (code === 0x28 /* ( */) ***REMOVED***
      level++;
      if (level > 32) ***REMOVED*** return result; }
  ***REMOVED***

    if (code === 0x29 /* ) */) ***REMOVED***
      if (level === 0) ***REMOVED*** break; }
      level--;
  ***REMOVED***

    pos++;
***REMOVED***

  if (start === pos) ***REMOVED*** return result; }
  if (level !== 0) ***REMOVED*** return result; }

  result.str = unescapeAll(str.slice(start, pos));
  result.lines = lines;
  result.pos = pos;
  result.ok = true;
  return result;
};
