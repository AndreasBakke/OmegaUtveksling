var __assign = this && this.__assign || function () ***REMOVED***
  __assign = Object.assign || function (t) ***REMOVED***
    for (var s, i = 1, n = arguments.length; i < n; i++) ***REMOVED***
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
  ***REMOVED***
    return t;
***REMOVED***;
  return __assign.apply(this, arguments);
};
var __rest = this && this.__rest || function (s, e) ***REMOVED***
  var t = ***REMOVED***};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) ***REMOVED***
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
***REMOVED***
  return t;
};
import React from "react";
import ***REMOVED*** IconContext, DefaultContext } from "./iconContext";
function Tree2Element(tree) ***REMOVED***
  return tree && tree.map(function (node, i) ***REMOVED***
    return React.createElement(node.tag, __assign(***REMOVED***
      key: i
  ***REMOVED***, node.attr), Tree2Element(node.child));
***REMOVED***);
}
export function GenIcon(data) ***REMOVED***
  // eslint-disable-next-line react/display-name
  return function (props) ***REMOVED***
    return React.createElement(IconBase, __assign(***REMOVED***
      attr: __assign(***REMOVED***}, data.attr)
  ***REMOVED***, props), Tree2Element(data.child));
***REMOVED***;
}
export function IconBase(props) ***REMOVED***
  var elem = function (conf) ***REMOVED***
    var attr = props.attr,
      size = props.size,
      title = props.title,
      svgProps = __rest(props, ["attr", "size", "title"]);
    var computedSize = size || conf.size || "1em";
    var className;
    if (conf.className) className = conf.className;
    if (props.className) className = (className ? className + " " : "") + props.className;
    return React.createElement("svg", __assign(***REMOVED***
      stroke: "currentColor",
      fill: "currentColor",
      strokeWidth: "0"
  ***REMOVED***, conf.attr, attr, svgProps, ***REMOVED***
      className: className,
      style: __assign(__assign(***REMOVED***
        color: props.color || conf.color
    ***REMOVED***, conf.style), props.style),
      height: computedSize,
      width: computedSize,
      xmlns: "http://www.w3.org/2000/svg"
  ***REMOVED***), title && React.createElement("title", null, title), props.children);
***REMOVED***;
  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) ***REMOVED***
    return elem(conf);
***REMOVED***) : elem(DefaultContext);
}