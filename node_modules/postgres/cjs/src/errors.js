const PostgresError = module.exports.PostgresError = class PostgresError extends Error ***REMOVED***
  constructor(x) ***REMOVED***
    super(x.message)
    this.name = this.constructor.name
    Object.assign(this, x)
***REMOVED***
}

const Errors = module.exports.Errors = ***REMOVED***
  connection,
  postgres,
  generic,
  notSupported
}

function connection(x, options, socket) ***REMOVED***
  const ***REMOVED*** host, port } = socket || options
  const error = Object.assign(
    new Error(('write ' + x + ' ' + (options.path || (host + ':' + port)))),
    ***REMOVED***
      code: x,
      errno: x,
      address: options.path || host
  ***REMOVED***, options.path ? ***REMOVED***} : ***REMOVED*** port: port }
  )
  Error.captureStackTrace(error, connection)
  return error
}

function postgres(x) ***REMOVED***
  const error = new PostgresError(x)
  Error.captureStackTrace(error, postgres)
  return error
}

function generic(code, message) ***REMOVED***
  const error = Object.assign(new Error(code + ': ' + message), ***REMOVED*** code })
  Error.captureStackTrace(error, generic)
  return error
}

/* c8 ignore next 10 */
function notSupported(x) ***REMOVED***
  const error = Object.assign(
    new Error(x + ' (B) is not supported'),
    ***REMOVED***
      code: 'MESSAGE_NOT_SUPPORTED',
      name: x
  ***REMOVED***
  )
  Error.captureStackTrace(error, notSupported)
  return error
}
