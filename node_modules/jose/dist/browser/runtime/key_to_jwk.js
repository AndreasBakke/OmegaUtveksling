import crypto, ***REMOVED*** isCryptoKey } from './webcrypto.js';
import invalidKeyInput from '../lib/invalid_key_input.js';
import ***REMOVED*** encode as base64url } from './base64url.js';
import ***REMOVED*** types } from './is_key_like.js';
const keyToJWK = async (key) => ***REMOVED***
    if (key instanceof Uint8Array) ***REMOVED***
        return ***REMOVED***
            kty: 'oct',
            k: base64url(key),
      ***REMOVED***;
  ***REMOVED***
    if (!isCryptoKey(key)) ***REMOVED***
        throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));
  ***REMOVED***
    if (!key.extractable) ***REMOVED***
        throw new TypeError('non-extractable CryptoKey cannot be exported as a JWK');
  ***REMOVED***
    const ***REMOVED*** ext, key_ops, alg, use, ...jwk } = await crypto.subtle.exportKey('jwk', key);
    return jwk;
};
export default keyToJWK;
