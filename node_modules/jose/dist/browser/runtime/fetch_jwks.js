import ***REMOVED*** JOSEError, JWKSTimeout } from '../util/errors.js';
const fetchJwks = async (url, timeout, options) => ***REMOVED***
    let controller;
    let id;
    let timedOut = false;
    if (typeof AbortController === 'function') ***REMOVED***
        controller = new AbortController();
        id = setTimeout(() => ***REMOVED***
            timedOut = true;
            controller.abort();
      ***REMOVED***, timeout);
  ***REMOVED***
    const response = await fetch(url.href, ***REMOVED***
        signal: controller ? controller.signal : undefined,
        redirect: 'manual',
        headers: options.headers,
  ***REMOVED***).catch((err) => ***REMOVED***
        if (timedOut)
            throw new JWKSTimeout();
        throw err;
  ***REMOVED***);
    if (id !== undefined)
        clearTimeout(id);
    if (response.status !== 200) ***REMOVED***
        throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');
  ***REMOVED***
    try ***REMOVED***
        return await response.json();
  ***REMOVED***
    catch (_a) ***REMOVED***
        throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');
  ***REMOVED***
};
export default fetchJwks;
