import crypto, ***REMOVED*** isCryptoKey } from './webcrypto.js';
import ***REMOVED*** checkSigCryptoKey } from '../lib/crypto_key.js';
import invalidKeyInput from '../lib/invalid_key_input.js';
import ***REMOVED*** types } from './is_key_like.js';
export default function getCryptoKey(alg, key, usage) ***REMOVED***
    if (isCryptoKey(key)) ***REMOVED***
        checkSigCryptoKey(key, alg, usage);
        return key;
  ***REMOVED***
    if (key instanceof Uint8Array) ***REMOVED***
        if (!alg.startsWith('HS')) ***REMOVED***
            throw new TypeError(invalidKeyInput(key, ...types));
      ***REMOVED***
        return crypto.subtle.importKey('raw', key, ***REMOVED*** hash: `SHA-$***REMOVED***alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);
  ***REMOVED***
    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));
}
