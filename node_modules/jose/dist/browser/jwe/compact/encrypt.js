import ***REMOVED*** FlattenedEncrypt } from '../flattened/encrypt.js';
export class CompactEncrypt ***REMOVED***
    constructor(plaintext) ***REMOVED***
        this._flattened = new FlattenedEncrypt(plaintext);
  ***REMOVED***
    setContentEncryptionKey(cek) ***REMOVED***
        this._flattened.setContentEncryptionKey(cek);
        return this;
  ***REMOVED***
    setInitializationVector(iv) ***REMOVED***
        this._flattened.setInitializationVector(iv);
        return this;
  ***REMOVED***
    setProtectedHeader(protectedHeader) ***REMOVED***
        this._flattened.setProtectedHeader(protectedHeader);
        return this;
  ***REMOVED***
    setKeyManagementParameters(parameters) ***REMOVED***
        this._flattened.setKeyManagementParameters(parameters);
        return this;
  ***REMOVED***
    async encrypt(key, options) ***REMOVED***
        const jwe = await this._flattened.encrypt(key, options);
        return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join('.');
  ***REMOVED***
}
