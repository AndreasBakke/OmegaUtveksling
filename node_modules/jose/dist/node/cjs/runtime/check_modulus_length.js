"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true });
exports.setModulusLength = exports.weakMap = void 0;
exports.weakMap = new WeakMap();
const getLength = (buf, index) => ***REMOVED***
    let len = buf.readUInt8(1);
    if ((len & 0x80) === 0) ***REMOVED***
        if (index === 0) ***REMOVED***
            return len;
      ***REMOVED***
        return getLength(buf.subarray(2 + len), index - 1);
  ***REMOVED***
    const num = len & 0x7f;
    len = 0;
    for (let i = 0; i < num; i++) ***REMOVED***
        len <<= 8;
        const j = buf.readUInt8(2 + i);
        len |= j;
  ***REMOVED***
    if (index === 0) ***REMOVED***
        return len;
  ***REMOVED***
    return getLength(buf.subarray(2 + len), index - 1);
};
const getLengthOfSeqIndex = (sequence, index) => ***REMOVED***
    const len = sequence.readUInt8(1);
    if ((len & 0x80) === 0) ***REMOVED***
        return getLength(sequence.subarray(2), index);
  ***REMOVED***
    const num = len & 0x7f;
    return getLength(sequence.subarray(2 + num), index);
};
const getModulusLength = (key) => ***REMOVED***
    var _a, _b;
    if (exports.weakMap.has(key)) ***REMOVED***
        return exports.weakMap.get(key);
  ***REMOVED***
    const modulusLength = (_b = (_a = key.asymmetricKeyDetails) === null || _a === void 0 ? void 0 : _a.modulusLength) !== null && _b !== void 0 ? _b : (getLengthOfSeqIndex(key.export(***REMOVED*** format: 'der', type: 'pkcs1' }), key.type === 'private' ? 1 : 0) -
        1) <<
        3;
    exports.weakMap.set(key, modulusLength);
    return modulusLength;
};
const setModulusLength = (keyObject, modulusLength) => ***REMOVED***
    exports.weakMap.set(keyObject, modulusLength);
};
exports.setModulusLength = setModulusLength;
exports.default = (key, alg) => ***REMOVED***
    if (getModulusLength(key) < 2048) ***REMOVED***
        throw new TypeError(`$***REMOVED***alg} requires key modulusLength to be 2048 bits or larger`);
  ***REMOVED***
};
