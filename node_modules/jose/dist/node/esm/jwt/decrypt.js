import ***REMOVED*** compactDecrypt } from '../jwe/compact/decrypt.js';
import jwtPayload from '../lib/jwt_claims_set.js';
import ***REMOVED*** JWTClaimValidationFailed } from '../util/errors.js';
export async function jwtDecrypt(jwt, key, options) ***REMOVED***
    const decrypted = await compactDecrypt(jwt, key, options);
    const payload = jwtPayload(decrypted.protectedHeader, decrypted.plaintext, options);
    const ***REMOVED*** protectedHeader } = decrypted;
    if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) ***REMOVED***
        throw new JWTClaimValidationFailed('replicated "iss" claim header parameter mismatch', 'iss', 'mismatch');
  ***REMOVED***
    if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) ***REMOVED***
        throw new JWTClaimValidationFailed('replicated "sub" claim header parameter mismatch', 'sub', 'mismatch');
  ***REMOVED***
    if (protectedHeader.aud !== undefined &&
        JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) ***REMOVED***
        throw new JWTClaimValidationFailed('replicated "aud" claim header parameter mismatch', 'aud', 'mismatch');
  ***REMOVED***
    const result = ***REMOVED*** payload, protectedHeader };
    if (typeof key === 'function') ***REMOVED***
        return ***REMOVED*** ...result, key: decrypted.key };
  ***REMOVED***
    return result;
}
