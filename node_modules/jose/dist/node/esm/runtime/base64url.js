import ***REMOVED*** Buffer } from 'buffer';
import ***REMOVED*** decoder } from '../lib/buffer_utils.js';
let encode;
function normalize(input) ***REMOVED***
    let encoded = input;
    if (encoded instanceof Uint8Array) ***REMOVED***
        encoded = decoder.decode(encoded);
  ***REMOVED***
    return encoded;
}
if (Buffer.isEncoding('base64url')) ***REMOVED***
    encode = (input) => Buffer.from(input).toString('base64url');
}
else ***REMOVED***
    encode = (input) => Buffer.from(input).toString('base64').replace(/=/g, '').replace(/\+/g, '-').replace(/\//g, '_');
}
export const decodeBase64 = (input) => Buffer.from(input, 'base64');
export const encodeBase64 = (input) => Buffer.from(input).toString('base64');
export ***REMOVED*** encode };
export const decode = (input) => Buffer.from(normalize(input), 'base64');
