/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/// <reference types="node" />
import ***REMOVED*** Status } from './status';
import * as protobuf from 'protobufjs';
import ***REMOVED*** Metadata } from './grpc';
import ***REMOVED*** JSONValue } from 'proto3-json-serializer';
export declare class GoogleError extends Error ***REMOVED***
    code?: Status;
    note?: string;
    metadata?: Metadata;
    statusDetails?: string | protobuf.Message<***REMOVED***}>[];
    reason?: string;
    domain?: string;
    errorInfoMetadata?: ***REMOVED***
        [propName: string]: string;
  ***REMOVED***;
    static parseGRPCStatusDetails(err: GoogleError): GoogleError;
    static parseHttpError(json: any): GoogleError;
}
export declare type FallbackServiceError = FallbackStatusObject & Error;
interface FallbackStatusObject ***REMOVED***
    code: Status;
    message: string;
    statusDetails: Array<***REMOVED***}>;
    reason?: string;
    domain?: string;
    errorInfoMetadata?: ***REMOVED***
        string: string;
  ***REMOVED***;
}
interface ProtobufAny ***REMOVED***
    type_url: string;
    value: Uint8Array;
}
interface GRPCStatusDetailsObject ***REMOVED***
    details: protobuf.Message<***REMOVED***}>[];
    errorInfo?: ErrorInfo;
}
interface ErrorInfo ***REMOVED***
    reason: string;
    domain: string;
    metadata: ***REMOVED***
        string: string;
  ***REMOVED***;
}
export declare class GoogleErrorDecoder ***REMOVED***
    root: protobuf.Root;
    anyType: protobuf.Type;
    statusType: protobuf.Type;
    constructor();
    decodeProtobufAny(anyValue: ProtobufAny): protobuf.Message<***REMOVED***}>;
    decodeRpcStatus(buffer: Buffer | ArrayBuffer): FallbackStatusObject;
    callErrorFromStatus(status: FallbackStatusObject): FallbackServiceError;
    decodeErrorFromBuffer(buffer: Buffer | ArrayBuffer): Error;
    decodeGRPCStatusDetails(bufferArr: Buffer[] | ArrayBuffer[]): GRPCStatusDetailsObject;
    decodeHTTPError(json: JSONValue): ***REMOVED***
        [k: string]: any;
  ***REMOVED***;
    decodeHttpStatusDetails(rawDetails: Array<ProtobufAny>): GRPCStatusDetailsObject;
}
export ***REMOVED***};
