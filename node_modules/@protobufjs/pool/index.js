"use strict";
module.exports = pool;

/**
 * An allocator as used by ***REMOVED***@link util.pool}.
 * @typedef PoolAllocator
 * @type ***REMOVED***function}
 * @param ***REMOVED***number} size Buffer size
 * @returns ***REMOVED***Uint8Array} Buffer
 */

/**
 * A slicer as used by ***REMOVED***@link util.pool}.
 * @typedef PoolSlicer
 * @type ***REMOVED***function}
 * @param ***REMOVED***number} start Start offset
 * @param ***REMOVED***number} end End offset
 * @returns ***REMOVED***Uint8Array} Buffer slice
 * @this ***REMOVED***Uint8Array}
 */

/**
 * A general purpose buffer pool.
 * @memberof util
 * @function
 * @param ***REMOVED***PoolAllocator} alloc Allocator
 * @param ***REMOVED***PoolSlicer} slice Slicer
 * @param ***REMOVED***number} [size=8192] Slab size
 * @returns ***REMOVED***PoolAllocator} Pooled allocator
 */
function pool(alloc, slice, size) ***REMOVED***
    var SIZE   = size || 8192;
    var MAX    = SIZE >>> 1;
    var slab   = null;
    var offset = SIZE;
    return function pool_alloc(size) ***REMOVED***
        if (size < 1 || size > MAX)
            return alloc(size);
        if (offset + size > SIZE) ***REMOVED***
            slab = alloc(SIZE);
            offset = 0;
      ***REMOVED***
        var buf = slice.call(slab, offset, offset += size);
        if (offset & 7) // align to 32 bit
            offset = (offset | 7) + 1;
        return buf;
  ***REMOVED***;
}
