// http://developer.postgresql.org/pgdocs/postgres/protocol-message-formats.html
import BufferList from './buffer-list'

const buffers = ***REMOVED***
  readyForQuery: function () ***REMOVED***
    return new BufferList().add(Buffer.from('I')).join(true, 'Z')
***REMOVED***,

  authenticationOk: function () ***REMOVED***
    return new BufferList().addInt32(0).join(true, 'R')
***REMOVED***,

  authenticationCleartextPassword: function () ***REMOVED***
    return new BufferList().addInt32(3).join(true, 'R')
***REMOVED***,

  authenticationMD5Password: function () ***REMOVED***
    return new BufferList()
      .addInt32(5)
      .add(Buffer.from([1, 2, 3, 4]))
      .join(true, 'R')
***REMOVED***,

  authenticationSASL: function () ***REMOVED***
    return new BufferList().addInt32(10).addCString('SCRAM-SHA-256').addCString('').join(true, 'R')
***REMOVED***,

  authenticationSASLContinue: function () ***REMOVED***
    return new BufferList().addInt32(11).addString('data').join(true, 'R')
***REMOVED***,

  authenticationSASLFinal: function () ***REMOVED***
    return new BufferList().addInt32(12).addString('data').join(true, 'R')
***REMOVED***,

  parameterStatus: function (name: string, value: string) ***REMOVED***
    return new BufferList().addCString(name).addCString(value).join(true, 'S')
***REMOVED***,

  backendKeyData: function (processID: number, secretKey: number) ***REMOVED***
    return new BufferList().addInt32(processID).addInt32(secretKey).join(true, 'K')
***REMOVED***,

  commandComplete: function (string: string) ***REMOVED***
    return new BufferList().addCString(string).join(true, 'C')
***REMOVED***,

  rowDescription: function (fields: any[]) ***REMOVED***
    fields = fields || []
    var buf = new BufferList()
    buf.addInt16(fields.length)
    fields.forEach(function (field) ***REMOVED***
      buf
        .addCString(field.name)
        .addInt32(field.tableID || 0)
        .addInt16(field.attributeNumber || 0)
        .addInt32(field.dataTypeID || 0)
        .addInt16(field.dataTypeSize || 0)
        .addInt32(field.typeModifier || 0)
        .addInt16(field.formatCode || 0)
  ***REMOVED***)
    return buf.join(true, 'T')
***REMOVED***,

  parameterDescription: function (dataTypeIDs: number[]) ***REMOVED***
    dataTypeIDs = dataTypeIDs || []
    var buf = new BufferList()
    buf.addInt16(dataTypeIDs.length)
    dataTypeIDs.forEach(function (dataTypeID) ***REMOVED***
      buf.addInt32(dataTypeID)
  ***REMOVED***)
    return buf.join(true, 't')
***REMOVED***,

  dataRow: function (columns: any[]) ***REMOVED***
    columns = columns || []
    var buf = new BufferList()
    buf.addInt16(columns.length)
    columns.forEach(function (col) ***REMOVED***
      if (col == null) ***REMOVED***
        buf.addInt32(-1)
    ***REMOVED*** else ***REMOVED***
        var strBuf = Buffer.from(col, 'utf8')
        buf.addInt32(strBuf.length)
        buf.add(strBuf)
    ***REMOVED***
  ***REMOVED***)
    return buf.join(true, 'D')
***REMOVED***,

  error: function (fields: any) ***REMOVED***
    return buffers.errorOrNotice(fields).join(true, 'E')
***REMOVED***,

  notice: function (fields: any) ***REMOVED***
    return buffers.errorOrNotice(fields).join(true, 'N')
***REMOVED***,

  errorOrNotice: function (fields: any) ***REMOVED***
    fields = fields || []
    var buf = new BufferList()
    fields.forEach(function (field: any) ***REMOVED***
      buf.addChar(field.type)
      buf.addCString(field.value)
  ***REMOVED***)
    return buf.add(Buffer.from([0])) // terminator
***REMOVED***,

  parseComplete: function () ***REMOVED***
    return new BufferList().join(true, '1')
***REMOVED***,

  bindComplete: function () ***REMOVED***
    return new BufferList().join(true, '2')
***REMOVED***,

  notification: function (id: number, channel: string, payload: string) ***REMOVED***
    return new BufferList().addInt32(id).addCString(channel).addCString(payload).join(true, 'A')
***REMOVED***,

  emptyQuery: function () ***REMOVED***
    return new BufferList().join(true, 'I')
***REMOVED***,

  portalSuspended: function () ***REMOVED***
    return new BufferList().join(true, 's')
***REMOVED***,

  closeComplete: function () ***REMOVED***
    return new BufferList().join(true, '3')
***REMOVED***,

  copyIn: function (cols: number) ***REMOVED***
    const list = new BufferList()
      // text mode
      .addByte(0)
      // column count
      .addInt16(cols)
    for (let i = 0; i < cols; i++) ***REMOVED***
      list.addInt16(i)
  ***REMOVED***
    return list.join(true, 'G')
***REMOVED***,

  copyOut: function (cols: number) ***REMOVED***
    const list = new BufferList()
      // text mode
      .addByte(0)
      // column count
      .addInt16(cols)
    for (let i = 0; i < cols; i++) ***REMOVED***
      list.addInt16(i)
  ***REMOVED***
    return list.join(true, 'H')
***REMOVED***,

  copyData: function (bytes: Buffer) ***REMOVED***
    return new BufferList().add(bytes).join(true, 'd')
***REMOVED***,

  copyDone: function () ***REMOVED***
    return new BufferList().join(true, 'c')
***REMOVED***,
}

export default buffers
