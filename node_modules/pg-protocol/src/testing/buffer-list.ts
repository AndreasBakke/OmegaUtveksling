export default class BufferList ***REMOVED***
  constructor(public buffers: Buffer[] = []) ***REMOVED***}

  public add(buffer: Buffer, front?: boolean) ***REMOVED***
    this.buffers[front ? 'unshift' : 'push'](buffer)
    return this
***REMOVED***

  public addInt16(val: number, front?: boolean) ***REMOVED***
    return this.add(Buffer.from([val >>> 8, val >>> 0]), front)
***REMOVED***

  public getByteLength(initial?: number) ***REMOVED***
    return this.buffers.reduce(function (previous, current) ***REMOVED***
      return previous + current.length
  ***REMOVED***, initial || 0)
***REMOVED***

  public addInt32(val: number, first?: boolean) ***REMOVED***
    return this.add(
      Buffer.from([(val >>> 24) & 0xff, (val >>> 16) & 0xff, (val >>> 8) & 0xff, (val >>> 0) & 0xff]),
      first
    )
***REMOVED***

  public addCString(val: string, front?: boolean) ***REMOVED***
    var len = Buffer.byteLength(val)
    var buffer = Buffer.alloc(len + 1)
    buffer.write(val)
    buffer[len] = 0
    return this.add(buffer, front)
***REMOVED***

  public addString(val: string, front?: boolean) ***REMOVED***
    var len = Buffer.byteLength(val)
    var buffer = Buffer.alloc(len)
    buffer.write(val)
    return this.add(buffer, front)
***REMOVED***

  public addChar(char: string, first?: boolean) ***REMOVED***
    return this.add(Buffer.from(char, 'utf8'), first)
***REMOVED***

  public addByte(byte: number) ***REMOVED***
    return this.add(Buffer.from([byte]))
***REMOVED***

  public join(appendLength?: boolean, char?: string): Buffer ***REMOVED***
    var length = this.getByteLength()
    if (appendLength) ***REMOVED***
      this.addInt32(length + 4, true)
      return this.join(false, char)
  ***REMOVED***
    if (char) ***REMOVED***
      this.addChar(char, true)
      length++
  ***REMOVED***
    var result = Buffer.alloc(length)
    var index = 0
    this.buffers.forEach(function (buffer) ***REMOVED***
      buffer.copy(result, index, 0)
      index += buffer.length
  ***REMOVED***)
    return result
***REMOVED***

  public static concat(): Buffer ***REMOVED***
    var total = new BufferList()
    for (var i = 0; i < arguments.length; i++) ***REMOVED***
      total.add(arguments[i])
  ***REMOVED***
    return total.join()
***REMOVED***
}
