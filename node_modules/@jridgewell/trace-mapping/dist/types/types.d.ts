import type ***REMOVED*** SourceMapSegment } from './sourcemap-segment';
import type ***REMOVED*** GREATEST_LOWER_BOUND, LEAST_UPPER_BOUND, TraceMap } from './trace-mapping';
export interface SourceMapV3 ***REMOVED***
    file?: string | null;
    names: string[];
    sourceRoot?: string;
    sources: (string | null)[];
    sourcesContent?: (string | null)[];
    version: 3;
}
export interface EncodedSourceMap extends SourceMapV3 ***REMOVED***
    mappings: string;
}
export interface DecodedSourceMap extends SourceMapV3 ***REMOVED***
    mappings: SourceMapSegment[][];
}
export interface Section ***REMOVED***
    offset: ***REMOVED***
        line: number;
        column: number;
  ***REMOVED***;
    map: EncodedSourceMap | DecodedSourceMap | SectionedSourceMap;
}
export interface SectionedSourceMap ***REMOVED***
    file?: string | null;
    sections: Section[];
    version: 3;
}
export declare type OriginalMapping = ***REMOVED***
    source: string | null;
    line: number;
    column: number;
    name: string | null;
};
export declare type InvalidOriginalMapping = ***REMOVED***
    source: null;
    line: null;
    column: null;
    name: null;
};
export declare type GeneratedMapping = ***REMOVED***
    line: number;
    column: number;
};
export declare type InvalidGeneratedMapping = ***REMOVED***
    line: null;
    column: null;
};
export declare type Bias = typeof GREATEST_LOWER_BOUND | typeof LEAST_UPPER_BOUND;
export declare type SourceMapInput = string | Ro<EncodedSourceMap> | Ro<DecodedSourceMap> | TraceMap;
export declare type SectionedSourceMapInput = SourceMapInput | Ro<SectionedSourceMap>;
export declare type Needle = ***REMOVED***
    line: number;
    column: number;
    bias?: Bias;
};
export declare type SourceNeedle = ***REMOVED***
    source: string;
    line: number;
    column: number;
    bias?: Bias;
};
export declare type EachMapping = ***REMOVED***
    generatedLine: number;
    generatedColumn: number;
    source: null;
    originalLine: null;
    originalColumn: null;
    name: null;
} | ***REMOVED***
    generatedLine: number;
    generatedColumn: number;
    source: string | null;
    originalLine: number;
    originalColumn: number;
    name: string | null;
};
export declare abstract class SourceMap ***REMOVED***
    version: SourceMapV3['version'];
    file: SourceMapV3['file'];
    names: SourceMapV3['names'];
    sourceRoot: SourceMapV3['sourceRoot'];
    sources: SourceMapV3['sources'];
    sourcesContent: SourceMapV3['sourcesContent'];
    resolvedSources: SourceMapV3['sources'];
}
export declare type Ro<T> = T extends Array<infer V> ? V[] | Readonly<V[]> | RoArray<V> | Readonly<RoArray<V>> : T extends object ? T | Readonly<T> | RoObject<T> | Readonly<RoObject<T>> : T;
declare type RoArray<T> = Ro<T>[];
declare type RoObject<T> = ***REMOVED***
    [K in keyof T]: T[K] | Ro<T[K]>;
};
export ***REMOVED***};
