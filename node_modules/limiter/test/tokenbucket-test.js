var vows = require('vows');
var assert = require('assert');

var TIMING_EPSILON = 10;

var TokenBucket = require('../lib/tokenBucket');

vows.describe('TokenBucket').addBatch(***REMOVED***
  'capacity 10, 1 per 100ms': ***REMOVED***
    topic: new TokenBucket(10, 1, 100),

    'is initialized empty': function(bucket) ***REMOVED***
      assert.equal(bucket.bucketSize, 10);
      assert.equal(bucket.tokensPerInterval, 1);
      assert.equal(bucket.content, 0);
  ***REMOVED***,
    'removing 10 tokens': ***REMOVED***
      topic: function(bucket) ***REMOVED***
        this.gStart = +new Date();
        bucket.removeTokens(10, this.callback);
    ***REMOVED***,
      'takes 1 second': function(remainingTokens) ***REMOVED***
        var duration = +new Date() - this.gStart;
        var diff = Math.abs(1000 - duration);
        assert.ok(diff < TIMING_EPSILON, diff+'');
        assert.equal(remainingTokens, 0);
    ***REMOVED***,
      'and removing another 10 tokens': ***REMOVED***
        topic: function(_, bucket) ***REMOVED***
          this.gStart = +new Date();
          assert.equal(bucket.content, 0);
          bucket.removeTokens(10, this.callback);
      ***REMOVED***,
        'takes 1 second': function() ***REMOVED***
          var duration = +new Date() - this.gStart;
          var diff = Math.abs(1000 - duration);
          assert.ok(diff < TIMING_EPSILON, diff+'');
      ***REMOVED***
    ***REMOVED***,
      'and waiting 2 seconds': ***REMOVED***
        topic: function(_, bucket) ***REMOVED***
          var self = this;
          setTimeout(function() ***REMOVED***
            self.gStart = +new Date();
            bucket.removeTokens(10, self.callback);
        ***REMOVED***, 2000);
      ***REMOVED***,
        'gives us only 10 tokens': function(remainingTokens) ***REMOVED***
          var duration = +new Date() - this.gStart;
          assert.ok(duration < TIMING_EPSILON, duration+'');
          assert.equal(remainingTokens, 0);
      ***REMOVED***,
        'and removing 1 token': ***REMOVED***
          topic: function(_, _, bucket) ***REMOVED***
            this.gStart = +new Date();
            bucket.removeTokens(1, this.callback);
        ***REMOVED***,
          'takes 100ms': function() ***REMOVED***
            var duration = +new Date() - this.gStart;
            var diff = Math.abs(100 - duration);
            assert.ok(diff < TIMING_EPSILON, diff+'');
        ***REMOVED***
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***
***REMOVED***,
}).export(module);
