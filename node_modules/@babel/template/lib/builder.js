"use strict";

Object.defineProperty(exports, "__esModule", ***REMOVED***
  value: true
});
exports.default = createTemplateBuilder;
var _options = require("./options");
var _string = require("./string");
var _literal = require("./literal");
const NO_PLACEHOLDER = (0, _options.validate)(***REMOVED***
  placeholderPattern: false
});
function createTemplateBuilder(formatter, defaultOpts) ***REMOVED***
  const templateFnCache = new WeakMap();
  const templateAstCache = new WeakMap();
  const cachedOpts = defaultOpts || (0, _options.validate)(null);
  return Object.assign((tpl, ...args) => ***REMOVED***
    if (typeof tpl === "string") ***REMOVED***
      if (args.length > 1) throw new Error("Unexpected extra params.");
      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));
  ***REMOVED*** else if (Array.isArray(tpl)) ***REMOVED***
      let builder = templateFnCache.get(tpl);
      if (!builder) ***REMOVED***
        builder = (0, _literal.default)(formatter, tpl, cachedOpts);
        templateFnCache.set(tpl, builder);
    ***REMOVED***
      return extendedTrace(builder(args));
  ***REMOVED*** else if (typeof tpl === "object" && tpl) ***REMOVED***
      if (args.length > 0) throw new Error("Unexpected extra params.");
      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));
  ***REMOVED***
    throw new Error(`Unexpected template param $***REMOVED***typeof tpl}`);
***REMOVED***, ***REMOVED***
    ast: (tpl, ...args) => ***REMOVED***
      if (typeof tpl === "string") ***REMOVED***
        if (args.length > 1) throw new Error("Unexpected extra params.");
        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();
    ***REMOVED*** else if (Array.isArray(tpl)) ***REMOVED***
        let builder = templateAstCache.get(tpl);
        if (!builder) ***REMOVED***
          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));
          templateAstCache.set(tpl, builder);
      ***REMOVED***
        return builder(args)();
    ***REMOVED***
      throw new Error(`Unexpected template param $***REMOVED***typeof tpl}`);
  ***REMOVED***
***REMOVED***);
}
function extendedTrace(fn) ***REMOVED***
  let rootStack = "";
  try ***REMOVED***
    throw new Error();
***REMOVED*** catch (error) ***REMOVED***
    if (error.stack) ***REMOVED***
      rootStack = error.stack.split("\n").slice(3).join("\n");
  ***REMOVED***
***REMOVED***
  return arg => ***REMOVED***
    try ***REMOVED***
      return fn(arg);
  ***REMOVED*** catch (err) ***REMOVED***
      err.stack += `\n    =============\n$***REMOVED***rootStack}`;
      throw err;
  ***REMOVED***
***REMOVED***;
}

//# sourceMappingURL=builder.js.map
