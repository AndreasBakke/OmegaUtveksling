***REMOVED***"version":3,"names":["isImmutable","node","isType","type","isIdentifier","name"],"sources":["../../src/validators/isImmutable.ts"],"sourcesContent":["import isType from \"./isType\";\nimport ***REMOVED*** isIdentifier } from \"./generated\";\nimport type * as t from \"..\";\n\n/**\n * Check if the input `node` is definitely immutable.\n */\nexport default function isImmutable(node: t.Node): boolean ***REMOVED***\n  if (isType(node.type, \"Immutable\")) return true;\n\n  if (isIdentifier(node)) ***REMOVED***\n    if (node.name === \"undefined\") ***REMOVED***\n      // immutable!\n      return true;\n  ***REMOVED*** else ***REMOVED***\n      // no idea...\n      return false;\n  ***REMOVED***\n***REMOVED***\n\n  return false;\n}\n"],"mappings":";;;;;;AAAA;AACA;AAMe,SAASA,WAAW,CAACC,IAAY,EAAW;EACzD,IAAI,IAAAC,eAAM,EAACD,IAAI,CAACE,IAAI,EAAE,WAAW,CAAC,EAAE,OAAO,IAAI;EAE/C,IAAI,IAAAC,uBAAY,EAACH,IAAI,CAAC,EAAE;IACtB,IAAIA,IAAI,CAACI,IAAI,KAAK,WAAW,EAAE;MAE7B,OAAO,IAAI;IACb,CAAC,MAAM;MAEL,OAAO,KAAK;IACd;EACF;EAEA,OAAO,KAAK;AACd"}