"use strict";

Object.defineProperty(exports, "__esModule", ***REMOVED***
  value: true
});
exports.default = isNodesEquivalent;
var _definitions = require("../definitions");
function isNodesEquivalent(a, b) ***REMOVED***
  if (typeof a !== "object" || typeof b !== "object" || a == null || b == null) ***REMOVED***
    return a === b;
***REMOVED***
  if (a.type !== b.type) ***REMOVED***
    return false;
***REMOVED***
  const fields = Object.keys(_definitions.NODE_FIELDS[a.type] || a.type);
  const visitorKeys = _definitions.VISITOR_KEYS[a.type];
  for (const field of fields) ***REMOVED***
    const val_a =
    a[field];
    const val_b = b[field];
    if (typeof val_a !== typeof val_b) ***REMOVED***
      return false;
  ***REMOVED***
    if (val_a == null && val_b == null) ***REMOVED***
      continue;
  ***REMOVED*** else if (val_a == null || val_b == null) ***REMOVED***
      return false;
  ***REMOVED***
    if (Array.isArray(val_a)) ***REMOVED***
      if (!Array.isArray(val_b)) ***REMOVED***
        return false;
    ***REMOVED***
      if (val_a.length !== val_b.length) ***REMOVED***
        return false;
    ***REMOVED***
      for (let i = 0; i < val_a.length; i++) ***REMOVED***
        if (!isNodesEquivalent(val_a[i], val_b[i])) ***REMOVED***
          return false;
      ***REMOVED***
    ***REMOVED***
      continue;
  ***REMOVED***
    if (typeof val_a === "object" && !(visitorKeys != null && visitorKeys.includes(field))) ***REMOVED***
      for (const key of Object.keys(val_a)) ***REMOVED***
        if (val_a[key] !== val_b[key]) ***REMOVED***
          return false;
      ***REMOVED***
    ***REMOVED***
      continue;
  ***REMOVED***
    if (!isNodesEquivalent(val_a, val_b)) ***REMOVED***
      return false;
  ***REMOVED***
***REMOVED***
  return true;
}

//# sourceMappingURL=isNodesEquivalent.js.map
