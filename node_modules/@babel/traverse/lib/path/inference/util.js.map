***REMOVED***"version":3,"names":["createFlowUnionType","createTSUnionType","createUnionTypeAnnotation","isFlowType","isTSType","createUnionType","types"],"sources":["../../../src/path/inference/util.ts"],"sourcesContent":["import ***REMOVED***\n  createFlowUnionType,\n  createTSUnionType,\n  createUnionTypeAnnotation,\n  isFlowType,\n  isTSType,\n} from \"@babel/types\";\nimport type * as t from \"@babel/types\";\n\nexport function createUnionType(\n  types: Array<t.FlowType | t.TSType>,\n): t.FlowType | t.TSType ***REMOVED***\n  if (process.env.BABEL_8_BREAKING) ***REMOVED***\n    if (isFlowType(types[0])) ***REMOVED***\n      return createFlowUnionType(types as t.FlowType[]);\n  ***REMOVED***\n    if (isTSType(types[0])) ***REMOVED***\n      return createTSUnionType(types as t.TSType[]);\n  ***REMOVED***\n***REMOVED*** else ***REMOVED***\n    if (isFlowType(types[0])) ***REMOVED***\n      if (createFlowUnionType) ***REMOVED***\n        return createFlowUnionType(types as t.FlowType[]);\n    ***REMOVED***\n\n      return createUnionTypeAnnotation(types as t.FlowType[]);\n  ***REMOVED*** else ***REMOVED***\n      if (createTSUnionType) ***REMOVED***\n        return createTSUnionType(types as t.TSType[]);\n    ***REMOVED***\n  ***REMOVED***\n***REMOVED***\n}\n"],"mappings":";;;;;;AAAA;AAMsB;EALpBA,mBAAmB;EACnBC,iBAAiB;EACjBC,yBAAyB;EACzBC,UAAU;EACVC;AAAQ;AAIH,SAASC,eAAe,CAC7BC,KAAmC,EACZ;EAQhB;IACL,IAAIH,UAAU,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;MACxB,IAAIN,mBAAmB,EAAE;QACvB,OAAOA,mBAAmB,CAACM,KAAK,CAAiB;MACnD;MAEA,OAAOJ,yBAAyB,CAACI,KAAK,CAAiB;IACzD,CAAC,MAAM;MACL,IAAIL,iBAAiB,EAAE;QACrB,OAAOA,iBAAiB,CAACK,KAAK,CAAe;MAC/C;IACF;EACF;AACF"}