import firebase from '@firebase/app-compat';
import ***REMOVED*** Component } from '@firebase/component';
import ***REMOVED*** trace } from '@firebase/performance';

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class PerformanceCompatImpl ***REMOVED***
    constructor(app, _delegate) ***REMOVED***
        this.app = app;
        this._delegate = _delegate;
  ***REMOVED***
    get instrumentationEnabled() ***REMOVED***
        return this._delegate.instrumentationEnabled;
  ***REMOVED***
    set instrumentationEnabled(val) ***REMOVED***
        this._delegate.instrumentationEnabled = val;
  ***REMOVED***
    get dataCollectionEnabled() ***REMOVED***
        return this._delegate.dataCollectionEnabled;
  ***REMOVED***
    set dataCollectionEnabled(val) ***REMOVED***
        this._delegate.dataCollectionEnabled = val;
  ***REMOVED***
    trace(traceName) ***REMOVED***
        return trace(this._delegate, traceName);
  ***REMOVED***
}

const name = "@firebase/performance-compat";
const version = "0.2.1";

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function registerPerformanceCompat(firebaseInstance) ***REMOVED***
    firebaseInstance.INTERNAL.registerComponent(new Component('performance-compat', performanceFactory, "PUBLIC" /* ComponentType.PUBLIC */));
    firebaseInstance.registerVersion(name, version);
}
function performanceFactory(container) ***REMOVED***
    const app = container.getProvider('app-compat').getImmediate();
    // The following call will always succeed.
    const performance = container.getProvider('performance').getImmediate();
    return new PerformanceCompatImpl(app, performance);
}
registerPerformanceCompat(firebase);
//# sourceMappingURL=index.esm2017.js.map
