const ***REMOVED*** ArgumentError } = require('../errors');
const ***REMOVED*** JwksClient } = require('../JwksClient');
const supportedAlg = require('./config');

module.exports.koaJwtSecret = function (options = ***REMOVED***}) ***REMOVED***
  if (!options.jwksUri) ***REMOVED***
    throw new ArgumentError('No JWKS provided. Please provide a jwksUri');
***REMOVED***

  const client = new JwksClient(options);

  return function secretProvider(***REMOVED*** alg, kid } = ***REMOVED***}) ***REMOVED***
    return new Promise((resolve, reject) => ***REMOVED***
      if (!supportedAlg.includes(alg)) ***REMOVED***
        return reject(new Error('Missing / invalid token algorithm'));
    ***REMOVED***

      client.getSigningKey(kid)
        .then(key => ***REMOVED***
          resolve(key.publicKey || key.rsaPublicKey);
      ***REMOVED***).catch(err => ***REMOVED***
          if (options.handleSigningKeyError) ***REMOVED***
            return options.handleSigningKeyError(err).then(reject);
        ***REMOVED***

          return reject(err);
      ***REMOVED***);
  ***REMOVED***);
***REMOVED***;
};
