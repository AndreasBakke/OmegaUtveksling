export const completionShTemplate = `###-begin-***REMOVED******REMOVED***app_name}}-completions-###
#
# yargs command completion script
#
# Installation: ***REMOVED******REMOVED***app_path}} ***REMOVED******REMOVED***completion_command}} >> ~/.bashrc
#    or ***REMOVED******REMOVED***app_path}} ***REMOVED******REMOVED***completion_command}} >> ~/.bash_profile on OSX.
#
_yargs_completions()
***REMOVED***
    local cur_word args type_list

    cur_word="\$***REMOVED***COMP_WORDS[COMP_CWORD]}"
    args=("\$***REMOVED***COMP_WORDS[@]}")

    # ask yargs to generate completions.
    type_list=$(***REMOVED******REMOVED***app_path}} --get-yargs-completions "\$***REMOVED***args[@]}")

    COMPREPLY=( $(compgen -W "\$***REMOVED***type_list}" -- \$***REMOVED***cur_word}) )

    # if no match was found, fall back to filename completion
    if [ \$***REMOVED***#COMPREPLY[@]} -eq 0 ]; then
      COMPREPLY=()
    fi

    return 0
}
complete -o default -F _yargs_completions ***REMOVED******REMOVED***app_name}}
###-end-***REMOVED******REMOVED***app_name}}-completions-###
`;
export const completionZshTemplate = `###-begin-***REMOVED******REMOVED***app_name}}-completions-###
#
# yargs command completion script
#
# Installation: ***REMOVED******REMOVED***app_path}} ***REMOVED******REMOVED***completion_command}} >> ~/.zshrc
#    or ***REMOVED******REMOVED***app_path}} ***REMOVED******REMOVED***completion_command}} >> ~/.zsh_profile on OSX.
#
_***REMOVED******REMOVED***app_name}}_yargs_completions()
***REMOVED***
  local reply
  local si=$IFS
  IFS=$'\n' reply=($(COMP_CWORD="$((CURRENT-1))" COMP_LINE="$BUFFER" COMP_POINT="$CURSOR" ***REMOVED******REMOVED***app_path}} --get-yargs-completions "\$***REMOVED***words[@]}"))
  IFS=$si
  _describe 'values' reply
}
compdef _***REMOVED******REMOVED***app_name}}_yargs_completions ***REMOVED******REMOVED***app_name}}
###-end-***REMOVED******REMOVED***app_name}}-completions-###
`;
