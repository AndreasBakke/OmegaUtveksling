/*global describe, expect, it */
'use strict';

var summarize = require('../../summarize');

describe('summarize', function() ***REMOVED***
    it('should export handlers', function() ***REMOVED***
        expect(summarize.handlers).toBeDefined();
        expect(typeof summarize.handlers).toBe('object');
  ***REMOVED***);

    it('should export a newDoclet handler', function() ***REMOVED***
        expect(summarize.handlers.newDoclet).toBeDefined();
        expect(typeof summarize.handlers.newDoclet).toBe('function');
  ***REMOVED***);

    describe('newDoclet handler', function() ***REMOVED***
        var handler = summarize.handlers.newDoclet;

        it('should not blow up if the doclet is missing', function() ***REMOVED***
            function noDoclet() ***REMOVED***
                return handler(***REMOVED***});
          ***REMOVED***

            expect(noDoclet).not.toThrow();
      ***REMOVED***);

        it('should not change the summary if it is already defined', function() ***REMOVED***
            var doclet = ***REMOVED***
                summary: 'This is a summary.',
                description: 'Descriptions are good.'
          ***REMOVED***;
            handler(***REMOVED*** doclet: doclet });

            expect(doclet.summary).not.toBe(doclet.description);
      ***REMOVED***);

        it('should not do anything if the description is missing', function() ***REMOVED***
            var doclet = ***REMOVED***};
            handler(***REMOVED*** doclet: doclet });

            expect(doclet.summary).not.toBeDefined();
      ***REMOVED***);

        it('should use the first sentence as the summary', function() ***REMOVED***
            var doclet = ***REMOVED***
                description: 'This sentence is the summary. This sentence is not.'
          ***REMOVED***;
            handler(***REMOVED*** doclet: doclet });

            expect(doclet.summary).toBe('This sentence is the summary.');
      ***REMOVED***);

        it('should not add an extra period if there is only one sentence in the description',
            function() ***REMOVED***
            var doclet = ***REMOVED***
                description: 'This description has only one sentence.'
          ***REMOVED***;
            handler(***REMOVED*** doclet: doclet });

            expect(doclet.summary).toBe('This description has only one sentence.');
      ***REMOVED***);

        it('should use the entire description, plus a period, as the summary if the description ' +
            'does not contain a period', function() ***REMOVED***
            var doclet = ***REMOVED***
                description: 'This is a description'
          ***REMOVED***;
            handler(***REMOVED*** doclet: doclet });

            expect(doclet.summary).toBe('This is a description.');
      ***REMOVED***);

        it('should use the entire description as the summary if the description contains only ' +
            'one sentence', function() ***REMOVED***
            var doclet = ***REMOVED***
                description: 'This is a description.'
          ***REMOVED***;
            handler(***REMOVED*** doclet: doclet });

            expect(doclet.description).toBe('This is a description.');
      ***REMOVED***);

        it('should work when an HTML tag immediately follows the first sentence', function() ***REMOVED***
            var doclet = ***REMOVED***
                description: 'This sentence is the summary.<small>This sentence is small.</small>'
          ***REMOVED***;
            handler(***REMOVED*** doclet: doclet });

            expect(doclet.summary).toBe('This sentence is the summary.');
      ***REMOVED***);

        it('should generate valid HTML if a tag is opened, but not closed, in the summary',
            function() ***REMOVED***
            var doclet = ***REMOVED***
                description: 'This description has <em>a tag. The tag straddles</em> sentences.'
          ***REMOVED***;
            handler(***REMOVED*** doclet: doclet });

            expect(doclet.summary).toBe('This description has <em>a tag.</em>');
      ***REMOVED***);

        it('should not include a <p> tag in the summary', function() ***REMOVED***
            var doclet = ***REMOVED***
                description: '<p>This description contains HTML.</p><p>And plenty of it!</p>'
          ***REMOVED***;
            handler(***REMOVED*** doclet: doclet });

            expect(doclet.summary).toBe('This description contains HTML.');
      ***REMOVED***);
  ***REMOVED***);
});
