<?js
    var params = obj;

    /* sort subparams under their parent params (like opts.classname) */
    var parentParam = null;
    params.forEach(function(param, i) ***REMOVED***
        var paramRegExp;

        if (!param) ***REMOVED***
            return;
      ***REMOVED***

        if (parentParam && parentParam.name && param.name) ***REMOVED***
            try ***REMOVED***
                paramRegExp = new RegExp('^(?:' + parentParam.name + '(?:\\[\\])*)\\.(.+)$');
          ***REMOVED***
            catch (e) ***REMOVED***
                // there's probably a typo in the JSDoc comment that resulted in a weird
                // parameter name
                return;
          ***REMOVED***

            if ( paramRegExp.test(param.name) ) ***REMOVED***
                param.name = RegExp.$1;
                parentParam.subparams = parentParam.subparams || [];
                parentParam.subparams.push(param);
                params[i] = null;
          ***REMOVED***
            else ***REMOVED***
                parentParam = param;
          ***REMOVED***
      ***REMOVED***
        else ***REMOVED***
            parentParam = param;
      ***REMOVED***
  ***REMOVED***);

    /* determine if we need extra columns, "attributes" and "default" */
    params.hasAttributes = false;
    params.hasDefault = false;
    params.hasName = false;

    params.forEach(function(param) ***REMOVED***
        if (!param) ***REMOVED*** return; }

        if (param.optional || param.nullable || param.variable) ***REMOVED***
            params.hasAttributes = true;
      ***REMOVED***

        if (param.name) ***REMOVED***
            params.hasName = true;
      ***REMOVED***

        if (typeof param.defaultvalue !== 'undefined') ***REMOVED***
            params.hasDefault = true;
      ***REMOVED***
  ***REMOVED***);
?>

<table class="params">
    <thead>
    <tr>
        <?js if (params.hasName) ***REMOVED***?>
        <th>Name</th>
        <?js } ?>

        <th>Type</th>

        <?js if (params.hasAttributes) ***REMOVED***?>
        <th>Attributes</th>
        <?js } ?>

        <?js if (params.hasDefault) ***REMOVED***?>
        <th>Default</th>
        <?js } ?>

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    <?js
        var self = this;
        params.forEach(function(param) ***REMOVED***
            if (!param) ***REMOVED*** return; }
    ?>

        <tr>
            <?js if (params.hasName) ***REMOVED***?>
                <td class="name"><code><?js= param.name ?></code></td>
            <?js } ?>

            <td class="type">
            <?js if (param.type && param.type.names) ***REMOVED***?>
                <?js= self.partial('type.tmpl', param.type.names) ?>
            <?js } ?>
            </td>

            <?js if (params.hasAttributes) ***REMOVED***?>
                <td class="attributes">
                <?js if (param.optional) ***REMOVED*** ?>
                    &lt;optional><br>
                <?js } ?>

                <?js if (param.nullable) ***REMOVED*** ?>
                    &lt;nullable><br>
                <?js } ?>

                <?js if (param.variable) ***REMOVED*** ?>
                    &lt;repeatable><br>
                <?js } ?>
                </td>
            <?js } ?>

            <?js if (params.hasDefault) ***REMOVED***?>
                <td class="default">
                <?js if (typeof param.defaultvalue !== 'undefined') ***REMOVED*** ?>
                    <?js= self.htmlsafe(param.defaultvalue) ?>
                <?js } ?>
                </td>
            <?js } ?>

            <td class="description last"><?js= param.description ?><?js if (param.subparams) ***REMOVED*** ?>
                <h6>Properties</h6>
                <?js= self.partial('params.tmpl', param.subparams) ?>
            <?js } ?></td>
        </tr>

    <?js }); ?>
    </tbody>
</table>
