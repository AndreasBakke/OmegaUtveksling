const _ = require('lodash');

// JSON schema types
const ARRAY = 'array';
const BOOLEAN = 'boolean';
const OBJECT = 'object';
const STRING = 'string';

const BOOLEAN_SCHEMA = ***REMOVED***
    type: BOOLEAN
};
const STRING_SCHEMA = ***REMOVED***
    type: STRING
};

const TYPES = require('./types');
const TYPE_NAMES = _.values(TYPES);

module.exports = ***REMOVED***
    type: OBJECT,
    additionalProperties: false,
    properties: ***REMOVED***
        type: ***REMOVED***
            type: STRING,
            enum: TYPE_NAMES
      ***REMOVED***,

        // field type
        key: ***REMOVED*** '$ref': '#' },
        value: ***REMOVED*** '$ref': '#' },

        // function type
        params: ***REMOVED***
            type: ARRAY,
            items: ***REMOVED*** '$ref': '#' }
      ***REMOVED***,
        'new': ***REMOVED*** '$ref': '#' },
        'this': ***REMOVED*** '$ref': '#' },
        result: ***REMOVED***'$ref': '#' },

        // name expression
        name: STRING_SCHEMA,

        // record type
        fields: ***REMOVED***
            type: ARRAY,
            items: ***REMOVED*** '$ref': '#' }
      ***REMOVED***,

        // type application
        expression: ***REMOVED*** '$ref': '#' },
        applications: ***REMOVED***
            type: ARRAY,
            minItems: 1,
            maxItems: 2,
            items: ***REMOVED*** '$ref': '#' }
      ***REMOVED***,

        // type union
        elements: ***REMOVED***
            type: ARRAY,
            minItems: 1,
            items: ***REMOVED*** '$ref': '#' }
      ***REMOVED***,

        optional: BOOLEAN_SCHEMA,
        nullable: BOOLEAN_SCHEMA,
        repeatable: BOOLEAN_SCHEMA,
        reservedWord: BOOLEAN_SCHEMA
  ***REMOVED***,
    required: ['type']
};
