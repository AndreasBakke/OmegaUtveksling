const memoizer = require('./..');
const assert = require('chai').assert;

describe('lru-memoizer (freeze)', function () ***REMOVED***
  var loadTimes = 0, memoized;

  beforeEach(function () ***REMOVED***
    loadTimes = 0;

    memoized = memoizer(***REMOVED***
      load: function (key, callback) ***REMOVED***
        loadTimes++;
        callback(null, ***REMOVED*** foo: 'bar' , buffer: new Buffer('1234') });
    ***REMOVED***,
      hash: function (key) ***REMOVED***
        return key;
    ***REMOVED***,
      freeze: true
  ***REMOVED***);
***REMOVED***);

  it('should return a freeze every time with the same cached structure', function (done) ***REMOVED***
    memoized('test', function (err, r1) ***REMOVED***

      assert.isNull(err);
      assert.strictEqual(loadTimes, 1);
      assert.equal(r1.foo, 'bar');
      r1.foo = 'bax';
      assert.isFrozen(r1);

      memoized('test', function (err, r2) ***REMOVED***
        assert.isNull(err);

        assert.strictEqual(loadTimes, 1);
        assert.equal(r2.foo, 'bar');
        assert.strictEqual(r1, r2);
        assert.isFrozen(r2);

        done();
    ***REMOVED***);
  ***REMOVED***);
***REMOVED***);

});

