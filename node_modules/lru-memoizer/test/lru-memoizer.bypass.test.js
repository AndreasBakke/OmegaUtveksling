const memoizer = require('../lib/index.js');
const assert = require('chai').assert;

describe('lru-memoizer (bypass)', function () ***REMOVED***
  var loadTimes = 0, memoized;

  beforeEach(function () ***REMOVED***
    loadTimes = 0;

    memoized = memoizer(***REMOVED***
      load: function (a, b, callback) ***REMOVED***
        loadTimes++;
        callback(null, a + b);
    ***REMOVED***,
      hash: function (a, b) ***REMOVED***
        return a + '-' + b;
    ***REMOVED***,
      bypass: function (a, b) ***REMOVED***
        return a < b;
    ***REMOVED***,
      max: 10
  ***REMOVED***);


***REMOVED***);

  it('should call the load function every time', function (done) ***REMOVED***
    memoized(1, 2, function (err) ***REMOVED***
      assert.isNull(err);
      assert.strictEqual(loadTimes, 1);
      memoized(1, 2, function (err) ***REMOVED***
        assert.isNull(err);
        assert.strictEqual(loadTimes, 2);
        done();
    ***REMOVED***);
  ***REMOVED***);
***REMOVED***);
});

