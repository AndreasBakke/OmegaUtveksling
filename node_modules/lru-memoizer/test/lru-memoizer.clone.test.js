const memoizer = require('./..');
const assert = require('chai').assert;

describe('lru-memoizer (clone)', () => ***REMOVED***
  let loadTimes = 0, memoized;

  beforeEach(() => ***REMOVED***
    loadTimes = 0;

    memoized = memoizer(***REMOVED***
      load: (key, callback) => ***REMOVED***
        loadTimes++;
        callback(null, ***REMOVED*** foo: key, buffer: Buffer.from('1234') });
    ***REMOVED***,
      hash: (key) => ***REMOVED***
        return key;
    ***REMOVED***,
      clone: true
  ***REMOVED***);
***REMOVED***);

  it('should return a clone every time with the same cached structure', (done) => ***REMOVED***
    memoized('bar', (err, r1) => ***REMOVED***

      assert.isNull(err);
      assert.strictEqual(loadTimes, 1);
      assert.equal(r1.foo, 'bar');
      r1.foo = 'bax';

      memoized('bar', (err, r2) => ***REMOVED***
        assert.isNull(err);

        assert.strictEqual(loadTimes, 1);
        assert.equal(r2.foo, 'bar');
        assert.notStrictEqual(r1, r2);
        assert.notEqual(r1, r2);

        done();
    ***REMOVED***);
  ***REMOVED***);
***REMOVED***);

});

