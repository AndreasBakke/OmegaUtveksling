***REMOVED***"version":3,"file":"react-router.production.min.js","sources":["../lib/use-sync-external-store-shim/useSyncExternalStoreShimClient.ts","../lib/use-sync-external-store-shim/index.ts","../lib/use-sync-external-store-shim/useSyncExternalStoreShimServer.ts","../lib/context.ts","../lib/hooks.tsx","../lib/components.tsx","../index.ts"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from \"react\";\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction isPolyfill(x: any, y: any) ***REMOVED***\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst is: (x: any, y: any) => boolean =\n  typeof Object.is === \"function\" ? Object.is : isPolyfill;\n\n// Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\nconst ***REMOVED*** useState, useEffect, useLayoutEffect, useDebugValue } = React;\n\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false;\n\n// Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  getServerSnapshot?: () => T\n): T ***REMOVED***\n  if (__DEV__) ***REMOVED***\n    if (!didWarnOld18Alpha) ***REMOVED***\n      if (\"startTransition\" in React) ***REMOVED***\n        didWarnOld18Alpha = true;\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that \" +\n            \"does not support useSyncExternalStore. The \" +\n            \"use-sync-external-store shim will not work correctly. Upgrade \" +\n            \"to a newer pre-release.\"\n        );\n    ***REMOVED***\n  ***REMOVED***\n***REMOVED***\n\n  // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n  const value = getSnapshot();\n  if (__DEV__) ***REMOVED***\n    if (!didWarnUncachedGetSnapshot) ***REMOVED***\n      const cachedValue = getSnapshot();\n      if (!is(value, cachedValue)) ***REMOVED***\n        console.error(\n          \"The result of getSnapshot should be cached to avoid an infinite loop\"\n        );\n        didWarnUncachedGetSnapshot = true;\n    ***REMOVED***\n  ***REMOVED***\n***REMOVED***\n\n  // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate(***REMOVED***inst}). That works because the\n  // new object always fails an equality check.\n  const [***REMOVED*** inst }, forceUpdate] = useState(***REMOVED*** inst: ***REMOVED*** value, getSnapshot } });\n\n  // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n  useLayoutEffect(() => ***REMOVED***\n    inst.value = value;\n    inst.getSnapshot = getSnapshot;\n\n    // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n    if (checkIfSnapshotChanged(inst)) ***REMOVED***\n      // Force a re-render.\n      forceUpdate(***REMOVED*** inst });\n  ***REMOVED***\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n***REMOVED***, [subscribe, value, getSnapshot]);\n\n  useEffect(() => ***REMOVED***\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) ***REMOVED***\n      // Force a re-render.\n      forceUpdate(***REMOVED*** inst });\n  ***REMOVED***\n    const handleStoreChange = () => ***REMOVED***\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) ***REMOVED***\n        // Force a re-render.\n        forceUpdate(***REMOVED*** inst });\n    ***REMOVED***\n  ***REMOVED***;\n    // Subscribe to the store and return a clean-up function.\n    return subscribe(handleStoreChange);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n***REMOVED***, [subscribe]);\n\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst: any) ***REMOVED***\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n  try ***REMOVED***\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n***REMOVED*** catch (error) ***REMOVED***\n    return true;\n***REMOVED***\n}\n","/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from \"react\";\n\nimport ***REMOVED*** useSyncExternalStore as client } from \"./useSyncExternalStoreShimClient\";\nimport ***REMOVED*** useSyncExternalStore as server } from \"./useSyncExternalStoreShimServer\";\n\nconst canUseDOM: boolean = !!(\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\"\n);\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? server : client;\n\nexport const useSyncExternalStore =\n  \"useSyncExternalStore\" in React\n    ? ((module) => module.useSyncExternalStore)(React)\n    : shim;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T\n): T ***REMOVED***\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n","import * as React from \"react\";\nimport type ***REMOVED***\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport type ***REMOVED*** Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject ***REMOVED***\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport interface NonIndexRouteObject ***REMOVED***\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & ***REMOVED***\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> ***REMOVED***}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> ***REMOVED***}\n\nexport interface DataRouterContextObject extends NavigationContextObject ***REMOVED***\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) ***REMOVED***\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) ***REMOVED***\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) ***REMOVED***\n  AwaitContext.displayName = \"Await\";\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\nexport interface NavigateOptions ***REMOVED***\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator ***REMOVED***\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject ***REMOVED***\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) ***REMOVED***\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject ***REMOVED***\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) ***REMOVED***\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject ***REMOVED***\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>(***REMOVED***\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) ***REMOVED***\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) ***REMOVED***\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type ***REMOVED***\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  Router as RemixRouter,\n  To,\n} from \"@remix-run/router\";\nimport ***REMOVED***\n  Action as NavigationType,\n  invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport type ***REMOVED***\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n  RelativeRoutingType,\n} from \"./context\";\nimport ***REMOVED***\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  ***REMOVED*** relative }: ***REMOVED*** relative?: RelativeRoutingType } = ***REMOVED***}\n): string ***REMOVED***\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let ***REMOVED*** basename, navigator } = React.useContext(NavigationContext);\n  let ***REMOVED*** hash, pathname, search } = useResolvedPath(to, ***REMOVED*** relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") ***REMOVED***\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n***REMOVED***\n\n  return navigator.createHref(***REMOVED*** pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean ***REMOVED***\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location ***REMOVED***\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType ***REMOVED***\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null ***REMOVED***\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let ***REMOVED*** pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction ***REMOVED***\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction ***REMOVED***\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let ***REMOVED*** basename, navigator } = React.useContext(NavigationContext);\n  let ***REMOVED*** matches } = React.useContext(RouteContext);\n  let ***REMOVED*** pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => ***REMOVED***\n    activeRef.current = true;\n***REMOVED***);\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = ***REMOVED***}) => ***REMOVED***\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") ***REMOVED***\n        navigator.go(to);\n        return;\n    ***REMOVED***\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history.  If this is a root navigation, then we\n      // navigate to the raw basename which allows the basename to have full\n      // control over the presence of a trailing slash on root links\n      if (basename !== \"/\") ***REMOVED***\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n    ***REMOVED***\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n  ***REMOVED***,\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context ***REMOVED***\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null ***REMOVED***\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) ***REMOVED***\n    return (\n      <OutletContext.Provider value=***REMOVED***context}>***REMOVED***outlet}</OutletContext.Provider>\n    );\n***REMOVED***\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> ***REMOVED***\n  let ***REMOVED*** matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : ***REMOVED***};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  ***REMOVED*** relative }: ***REMOVED*** relative?: RelativeRoutingType } = ***REMOVED***}\n): Path ***REMOVED***\n  let ***REMOVED*** matches } = React.useContext(RouteContext);\n  let ***REMOVED*** pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null ***REMOVED***\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let ***REMOVED*** navigator } = React.useContext(NavigationContext);\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let ***REMOVED*** matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : ***REMOVED***};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) ***REMOVED***\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   ***REMOVED***/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element=***REMOVED***<Blog />} />\n    //   <Route path=\"blog/feed\" element=***REMOVED***<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() ***REMOVED***\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element=***REMOVED***<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"$***REMOVED***parentPathname}\" (under <Route path=\"$***REMOVED***parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"$***REMOVED***parentPath}\"> to <Route ` +\n        `path=\"$***REMOVED***parentPath === \"/\" ? \"*\" : `$***REMOVED***parentPath}/*`}\">.`\n    );\n***REMOVED***\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) ***REMOVED***\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"$***REMOVED***parentPathnameBase}\" ` +\n        `but pathname \"$***REMOVED***parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n***REMOVED*** else ***REMOVED***\n    location = locationFromContext;\n***REMOVED***\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, ***REMOVED*** pathname: remainingPathname });\n\n  if (__DEV__) ***REMOVED***\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"$***REMOVED***location.pathname}$***REMOVED***location.search}$***REMOVED***location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"$***REMOVED***location.pathname}$***REMOVED***location.search}$***REMOVED***location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n***REMOVED***\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign(***REMOVED***}, match, ***REMOVED***\n          params: Object.assign(***REMOVED***}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n      ***REMOVED***)\n      ),\n    parentMatches,\n    dataRouterStateContext || undefined\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) ***REMOVED***\n    return (\n      <LocationContext.Provider\n        value=***REMOVED******REMOVED***\n          location: ***REMOVED***\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n        ***REMOVED***,\n          navigationType: NavigationType.Pop,\n      ***REMOVED***}\n      >\n        ***REMOVED***renderedMatches}\n      </LocationContext.Provider>\n    );\n***REMOVED***\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorElement() ***REMOVED***\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `$***REMOVED***error.status} $***REMOVED***error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = ***REMOVED*** padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = ***REMOVED*** padding: \"2px 4px\", backgroundColor: lightgrey };\n  return (\n    <>\n      <h2>Unhandled Thrown Error!</h2>\n      <h3 style=***REMOVED******REMOVED*** fontStyle: \"italic\" }}>***REMOVED***message}</h3>\n      ***REMOVED***stack ? <pre style=***REMOVED***preStyles}>***REMOVED***stack}</pre> : null}\n      <p>💿 Hey developer 👋</p>\n      <p>\n        You can provide a way better UX than this when your app throws errors by\n        providing your own&nbsp;\n        <code style=***REMOVED***codeStyles}>errorElement</code> props on&nbsp;\n        <code style=***REMOVED***codeStyles}>&lt;Route&gt;</code>\n      </p>\n    </>\n  );\n}\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<***REMOVED***\n  location: Location;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = ***REMOVED***\n  location: Location;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> ***REMOVED***\n  constructor(props: RenderErrorBoundaryProps) ***REMOVED***\n    super(props);\n    this.state = ***REMOVED***\n      location: props.location,\n      error: props.error,\n  ***REMOVED***;\n***REMOVED***\n\n  static getDerivedStateFromError(error: any) ***REMOVED***\n    return ***REMOVED*** error: error };\n***REMOVED***\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) ***REMOVED***\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) ***REMOVED***\n      return ***REMOVED***\n        error: props.error,\n        location: props.location,\n    ***REMOVED***;\n  ***REMOVED***\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return ***REMOVED***\n      error: props.error || state.error,\n      location: state.location,\n  ***REMOVED***;\n***REMOVED***\n\n  componentDidCatch(error: any, errorInfo: any) ***REMOVED***\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n***REMOVED***\n\n  render() ***REMOVED***\n    return this.state.error ? (\n      <RouteContext.Provider value=***REMOVED***this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value=***REMOVED***this.state.error}\n          children=***REMOVED***this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n***REMOVED***\n}\n\ninterface RenderedRouteProps ***REMOVED***\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute(***REMOVED*** routeContext, match, children }: RenderedRouteProps) ***REMOVED***\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    match.route.errorElement\n  ) ***REMOVED***\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n***REMOVED***\n\n  return (\n    <RouteContext.Provider value=***REMOVED***routeContext}>\n      ***REMOVED***children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null ***REMOVED***\n  if (matches == null) ***REMOVED***\n    if (dataRouterState?.errors) ***REMOVED***\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n  ***REMOVED*** else ***REMOVED***\n      return null;\n  ***REMOVED***\n***REMOVED***\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) ***REMOVED***\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for the current errors: $***REMOVED***errors}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n***REMOVED***\n\n  return renderedMatches.reduceRight((outlet, match, index) => ***REMOVED***\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = dataRouterState\n      ? match.route.errorElement || <DefaultErrorElement />\n      : null;\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => (\n      <RenderedRoute match=***REMOVED***match} routeContext=***REMOVED******REMOVED*** outlet, matches }}>\n        ***REMOVED***error\n          ? errorElement\n          : match.route.element !== undefined\n          ? match.route.element\n          : outlet}\n      </RenderedRoute>\n    );\n    // Only wrap in an error boundary within data router usages when we have an\n    // errorElement on this route.  Otherwise let it bubble up to an ancestor\n    // errorElement\n    return dataRouterState && (match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location=***REMOVED***dataRouterState.location}\n        component=***REMOVED***errorElement}\n        error=***REMOVED***error}\n        children=***REMOVED***getChildren()}\n        routeContext=***REMOVED******REMOVED*** outlet: null, matches }}\n      />\n    ) : (\n      getChildren()\n    );\n***REMOVED***, null as React.ReactElement | null);\n}\n\nenum DataRouterHook ***REMOVED***\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nenum DataRouterStateHook ***REMOVED***\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) ***REMOVED***\n  return `$***REMOVED***hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) ***REMOVED***\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) ***REMOVED***\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) ***REMOVED***\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\nfunction useCurrentRouteId(hookName: DataRouterStateHook) ***REMOVED***\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `$***REMOVED***hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() ***REMOVED***\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() ***REMOVED***\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return ***REMOVED***\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n***REMOVED***;\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() ***REMOVED***\n  let ***REMOVED*** matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => ***REMOVED***\n        let ***REMOVED*** pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return ***REMOVED***\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n      ***REMOVED***;\n    ***REMOVED***),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown ***REMOVED***\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) ***REMOVED***\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: $***REMOVED***routeId})`\n    );\n    return undefined;\n***REMOVED***\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown ***REMOVED***\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown ***REMOVED***\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || ***REMOVED***})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown ***REMOVED***\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) ***REMOVED***\n    return error;\n***REMOVED***\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown ***REMOVED***\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown ***REMOVED***\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\n// useBlocker() is a singleton for now since we don't have any compelling use\n// cases for multi-blocker yet\nlet blockerKey = \"blocker-singleton\";\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker ***REMOVED***\n  let ***REMOVED*** router } = useDataRouterContext(DataRouterHook.UseBlocker);\n\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (args) => ***REMOVED***\n      return typeof shouldBlock === \"function\"\n        ? !!shouldBlock(args)\n        : !!shouldBlock;\n  ***REMOVED***,\n    [shouldBlock]\n  );\n\n  let blocker = router.getBlocker(blockerKey, blockerFunction);\n\n  // Cleanup on unmount\n  React.useEffect(() => () => router.deleteBlocker(blockerKey), [router]);\n\n  return blocker;\n}\n\nconst alreadyWarned: Record<string, boolean> = ***REMOVED***};\n\nfunction warningOnce(key: string, cond: boolean, message: string) ***REMOVED***\n  if (!cond && !alreadyWarned[key]) ***REMOVED***\n    alreadyWarned[key] = true;\n    warning(false, message);\n***REMOVED***\n}\n","import * as React from \"react\";\nimport type ***REMOVED***\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  RouterState,\n  To,\n} from \"@remix-run/router\";\nimport ***REMOVED***\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  invariant,\n  parsePath,\n  stripBasename,\n  warning,\n} from \"@remix-run/router\";\nimport ***REMOVED*** useSyncExternalStore as useSyncExternalStoreShim } from \"./use-sync-external-store-shim\";\n\nimport type ***REMOVED***\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RelativeRoutingType,\n} from \"./context\";\nimport ***REMOVED***\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n} from \"./context\";\nimport ***REMOVED***\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\n\nexport interface RouterProviderProps ***REMOVED***\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider(***REMOVED***\n  fallbackElement,\n  router,\n}: RouterProviderProps): React.ReactElement ***REMOVED***\n  // Sync router state to our component state to force re-renders\n  let state: RouterState = useSyncExternalStoreShim(\n    router.subscribe,\n    () => router.state,\n    // We have to provide this so React@18 doesn't complain during hydration,\n    // but we pass our serialized hydration data into the router so state here\n    // is already synced with what the server saw\n    () => router.state\n  );\n\n  let navigator = React.useMemo((): Navigator => ***REMOVED***\n    return ***REMOVED***\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, ***REMOVED***\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n      ***REMOVED***),\n      replace: (to, state, opts) =>\n        router.navigate(to, ***REMOVED***\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n      ***REMOVED***),\n  ***REMOVED***;\n***REMOVED***, [router]);\n\n  let basename = router.basename || \"/\";\n\n  // The fragment and ***REMOVED***null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider\n        value=***REMOVED******REMOVED***\n          router,\n          navigator,\n          static: false,\n          // Do we need this?\n          basename,\n      ***REMOVED***}\n      >\n        <DataRouterStateContext.Provider value=***REMOVED***state}>\n          <Router\n            basename=***REMOVED***router.basename}\n            location=***REMOVED***router.state.location}\n            navigationType=***REMOVED***router.state.historyAction}\n            navigator=***REMOVED***navigator}\n          >\n            ***REMOVED***router.state.initialized ? <Routes /> : fallbackElement}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      ***REMOVED***null}\n    </>\n  );\n}\n\nexport interface MemoryRouterProps ***REMOVED***\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter(***REMOVED***\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement ***REMOVED***\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) ***REMOVED***\n    historyRef.current = createMemoryHistory(***REMOVED***\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n  ***REMOVED***);\n***REMOVED***\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState(***REMOVED***\n    action: history.action,\n    location: history.location,\n***REMOVED***);\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename=***REMOVED***basename}\n      children=***REMOVED***children}\n      location=***REMOVED***state.location}\n      navigationType=***REMOVED***state.action}\n      navigator=***REMOVED***history}\n    />\n  );\n}\n\nexport interface NavigateProps ***REMOVED***\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate(***REMOVED***\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null ***REMOVED***\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n\n  React.useEffect(() => ***REMOVED***\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") ***REMOVED***\n      return;\n  ***REMOVED***\n    navigate(to, ***REMOVED*** replace, state, relative });\n***REMOVED***);\n\n  return null;\n}\n\nexport interface OutletProps ***REMOVED***\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null ***REMOVED***\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps ***REMOVED***\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps ***REMOVED***}\n\nexport interface IndexRouteProps ***REMOVED***\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null ***REMOVED***\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps ***REMOVED***\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router(***REMOVED***\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null ***REMOVED***\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => (***REMOVED*** basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") ***REMOVED***\n    locationProp = parsePath(locationProp);\n***REMOVED***\n\n  let ***REMOVED***\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n***REMOVED*** = locationProp;\n\n  let location = React.useMemo(() => ***REMOVED***\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) ***REMOVED***\n      return null;\n  ***REMOVED***\n\n    return ***REMOVED***\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key,\n  ***REMOVED***;\n***REMOVED***, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"$***REMOVED***basename}\"> is not able to match the URL ` +\n      `\"$***REMOVED***pathname}$***REMOVED***search}$***REMOVED***hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) ***REMOVED***\n    return null;\n***REMOVED***\n\n  return (\n    <NavigationContext.Provider value=***REMOVED***navigationContext}>\n      <LocationContext.Provider\n        children=***REMOVED***children}\n        value=***REMOVED******REMOVED*** location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps ***REMOVED***\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes(***REMOVED***\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null ***REMOVED***\n  let dataRouterContext = React.useContext(DataRouterContext);\n  // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n  let routes =\n    dataRouterContext && !children\n      ? (dataRouterContext.router.routes as DataRouteObject[])\n      : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n\nexport interface AwaitResolveRenderFunction ***REMOVED***\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps ***REMOVED***\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await(***REMOVED*** children, errorElement, resolve }: AwaitProps) ***REMOVED***\n  return (\n    <AwaitErrorBoundary resolve=***REMOVED***resolve} errorElement=***REMOVED***errorElement}>\n      <ResolveAwait>***REMOVED***children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<***REMOVED***\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = ***REMOVED***\n  error: any;\n};\n\nenum AwaitRenderStatus ***REMOVED***\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => ***REMOVED***});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> ***REMOVED***\n  constructor(props: AwaitErrorBoundaryProps) ***REMOVED***\n    super(props);\n    this.state = ***REMOVED*** error: null };\n***REMOVED***\n\n  static getDerivedStateFromError(error: any) ***REMOVED***\n    return ***REMOVED*** error };\n***REMOVED***\n\n  componentDidCatch(error: any, errorInfo: any) ***REMOVED***\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n***REMOVED***\n\n  render() ***REMOVED***\n    let ***REMOVED*** children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) ***REMOVED***\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", ***REMOVED*** get: () => true });\n      Object.defineProperty(promise, \"_data\", ***REMOVED*** get: () => resolve });\n  ***REMOVED*** else if (this.state.error) ***REMOVED***\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => ***REMOVED***}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", ***REMOVED*** get: () => true });\n      Object.defineProperty(promise, \"_error\", ***REMOVED*** get: () => renderError });\n  ***REMOVED*** else if ((resolve as TrackedPromise)._tracked) ***REMOVED***\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n  ***REMOVED*** else ***REMOVED***\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", ***REMOVED*** get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", ***REMOVED*** get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", ***REMOVED*** get: () => error })\n      );\n  ***REMOVED***\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) ***REMOVED***\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n  ***REMOVED***\n\n    if (status === AwaitRenderStatus.error && !errorElement) ***REMOVED***\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n  ***REMOVED***\n\n    if (status === AwaitRenderStatus.error) ***REMOVED***\n      // Render via our errorElement\n      return <AwaitContext.Provider value=***REMOVED***promise} children=***REMOVED***errorElement} />;\n  ***REMOVED***\n\n    if (status === AwaitRenderStatus.success) ***REMOVED***\n      // Render children with resolved value\n      return <AwaitContext.Provider value=***REMOVED***promise} children=***REMOVED***children} />;\n  ***REMOVED***\n\n    // Throw to the suspense boundary\n    throw promise;\n***REMOVED***\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait(***REMOVED***\n  children,\n}: ***REMOVED***\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) ***REMOVED***\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>***REMOVED***toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] ***REMOVED***\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => ***REMOVED***\n    if (!React.isValidElement(element)) ***REMOVED***\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n  ***REMOVED***\n\n    if (element.type === React.Fragment) ***REMOVED***\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, parentPath)\n      );\n      return;\n  ***REMOVED***\n\n    invariant(\n      element.type === Route,\n      `[$***REMOVED***\n        typeof element.type === \"string\" ? element.type : element.type.name\n    ***REMOVED***] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let treePath = [...parentPath, index];\n    let route: RouteObject = ***REMOVED***\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      hasErrorBoundary: element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n  ***REMOVED***;\n\n    if (element.props.children) ***REMOVED***\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n  ***REMOVED***\n\n    routes.push(route);\n***REMOVED***);\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null ***REMOVED***\n  return _renderMatches(matches);\n}\n\n/**\n * @private\n * Walk the route tree and add hasErrorBoundary if it's not provided, so that\n * users providing manual route arrays can just specify errorElement\n */\nexport function enhanceManualRouteObjects(\n  routes: RouteObject[]\n): RouteObject[] ***REMOVED***\n  return routes.map((route) => ***REMOVED***\n    let routeClone = ***REMOVED*** ...route };\n    if (routeClone.hasErrorBoundary == null) ***REMOVED***\n      routeClone.hasErrorBoundary = routeClone.errorElement != null;\n  ***REMOVED***\n    if (routeClone.children) ***REMOVED***\n      routeClone.children = enhanceManualRouteObjects(routeClone.children);\n  ***REMOVED***\n    return routeClone;\n***REMOVED***);\n}\n","import type ***REMOVED***\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n} from \"@remix-run/router\";\nimport ***REMOVED***\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  resolvePath,\n} from \"@remix-run/router\";\n\nimport type ***REMOVED***\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n} from \"./lib/components\";\nimport ***REMOVED***\n  enhanceManualRouteObjects,\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type ***REMOVED***\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  RelativeRoutingType,\n} from \"./lib/context\";\nimport ***REMOVED***\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type ***REMOVED*** NavigateFunction } from \"./lib/hooks\";\nimport ***REMOVED***\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type ***REMOVED***\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport ***REMOVED***\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker as unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: ***REMOVED***\n    basename?: string;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n***REMOVED***\n): RemixRouter ***REMOVED***\n  return createRouter(***REMOVED***\n    basename: opts?.basename,\n    history: createMemoryHistory(***REMOVED***\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n  ***REMOVED***),\n    hydrationData: opts?.hydrationData,\n    routes: enhanceManualRouteObjects(routes),\n***REMOVED***).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport ***REMOVED***\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  enhanceManualRouteObjects as UNSAFE_enhanceManualRouteObjects,\n};\n"],"names":["is","Object","x","y","useState","useEffect","useLayoutEffect","useDebugValue","React","checkIfSnapshotChanged","inst","latestGetSnapshot","getSnapshot","prevValue","value","nextValue","error","shim","window","document","createElement","subscribe","getServerSnapshot","forceUpdate","useSyncExternalStore","DataRouterContext","createContext","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","matches","RouteErrorContext","useHref","to","relative","useInRouterContext","invariant","basename","navigator","useContext","hash","pathname","search","useResolvedPath","joinedPathname","joinPaths","createHref","useLocation","location","useNavigationType","navigationType","useMatch","pattern","useMemo","matchPath","useNavigate","locationPathname","routePathnamesJson","JSON","stringify","getPathContributingMatches","map","match","pathnameBase","activeRef","useRef","current","useCallback","options","go","path","resolveTo","parse","replace","push","state","OutletContext","useOutletContext","useOutlet","context","Provider","useParams","routeMatch","length","params","useRoutes","routes","locationArg","dataRouterStateContext","parentMatches","parentParams","parentPathnameBase","route","locationFromContext","parsedLocationArg","parsePath","startsWith","remainingPathname","slice","matchRoutes","renderedMatches","_renderMatches","assign","encodeLocation","undefined","key","NavigationType","Pop","DefaultErrorElement","useRouteError","message","isRouteErrorResponse","status","statusText","Error","stack","lightgrey","preStyles","padding","backgroundColor","codeStyles","Fragment","style","fontStyle","RenderErrorBoundary","Component","constructor","props","super","this","static","componentDidCatch","errorInfo","console","render","routeContext","children","component","RenderedRoute","dataRouterContext","staticContext","errorElement","_deepestRenderedBoundaryId","id","dataRouterState","errors","errorIndex","findIndex","m","Math","min","reduceRight","index","concat","getChildren","element","DataRouterHook","DataRouterStateHook","useDataRouterContext","hookName","ctx","useDataRouterState","useCurrentRouteId","useRouteContext","thisRoute","useNavigation","UseNavigation","navigation","useRevalidator","UseRevalidator","revalidate","router","revalidation","useMatches","loaderData","UseMatches","data","handle","useLoaderData","UseLoaderData","routeId","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","values","actionData","UseRouteError","useAsyncValue","_data","useAsyncError","_error","useBlocker","shouldBlock","UseBlocker","blockerFunction","args","blocker","getBlocker","deleteBlocker","RouterProvider","fallbackElement","useSyncExternalStoreShim","n","navigate","opts","preventScrollReset","Router","historyAction","initialized","Routes","MemoryRouter","initialEntries","initialIndex","historyRef","createMemoryHistory","v5Compat","history","setState","action","listen","Navigate","Outlet","Route","_props","basenameProp","locationProp","staticProp","navigationContext","trailingPathname","stripBasename","createRoutesFromChildren","Await","resolve","AwaitErrorBoundary","ResolveAwait","AwaitRenderStatus","neverSettledPromise","Promise","promise","pending","renderError","reject","catch","defineProperty","get","_tracked","success","then","AbortedDeferredError","toRender","parentPath","Children","forEach","isValidElement","type","apply","treePath","join","caseSensitive","loader","hasErrorBoundary","shouldRevalidate","renderMatches","enhanceManualRouteObjects","routeClone","createMemoryRouter","createRouter","hydrationData","initialize"],"mappings":"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"}