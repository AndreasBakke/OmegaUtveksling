var _getLength = require('./_getLength.js');
var _isArrayLike = require('./_isArrayLike.js');
var isArray = require('./isArray.js');
var isArguments = require('./isArguments.js');

// Internal implementation of a recursive `flatten` function.
function flatten(input, depth, strict, output) ***REMOVED***
  output = output || [];
  if (!depth && depth !== 0) ***REMOVED***
    depth = Infinity;
***REMOVED*** else if (depth <= 0) ***REMOVED***
    return output.concat(input);
***REMOVED***
  var idx = output.length;
  for (var i = 0, length = _getLength(input); i < length; i++) ***REMOVED***
    var value = input[i];
    if (_isArrayLike(value) && (isArray(value) || isArguments(value))) ***REMOVED***
      // Flatten current level of array or arguments object.
      if (depth > 1) ***REMOVED***
        flatten(value, depth - 1, strict, output);
        idx = output.length;
    ***REMOVED*** else ***REMOVED***
        var j = 0, len = value.length;
        while (j < len) output[idx++] = value[j++];
    ***REMOVED***
  ***REMOVED*** else if (!strict) ***REMOVED***
      output[idx++] = value;
  ***REMOVED***
***REMOVED***
  return output;
}

module.exports = flatten;
