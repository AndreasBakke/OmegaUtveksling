var restArguments = require('./restArguments.js');
var _executeBound = require('./_executeBound.js');
var underscore = require('./underscore.js');

// Partially apply a function by creating a version that has had some of its
// arguments pre-filled, without changing its dynamic `this` context. `_` acts
// as a placeholder by default, allowing any combination of arguments to be
// pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.
var partial = restArguments(function(func, boundArgs) ***REMOVED***
  var placeholder = partial.placeholder;
  var bound = function() ***REMOVED***
    var position = 0, length = boundArgs.length;
    var args = Array(length);
    for (var i = 0; i < length; i++) ***REMOVED***
      args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];
  ***REMOVED***
    while (position < arguments.length) args.push(arguments[position++]);
    return _executeBound(func, bound, this, this, args);
***REMOVED***;
  return bound;
});

partial.placeholder = underscore;

module.exports = partial;
