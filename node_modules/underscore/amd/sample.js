define(['./_isArrayLike', './values', './_getLength', './random', './toArray'], function (_isArrayLike, values, _getLength, random, toArray) ***REMOVED***

  // Sample **n** random values from a collection using the modern version of the
  // [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisherâ€“Yates_shuffle).
  // If **n** is not specified, returns a single random element.
  // The internal `guard` argument allows it to work with `_.map`.
  function sample(obj, n, guard) ***REMOVED***
    if (n == null || guard) ***REMOVED***
      if (!_isArrayLike(obj)) obj = values(obj);
      return obj[random(obj.length - 1)];
  ***REMOVED***
    var sample = toArray(obj);
    var length = _getLength(sample);
    n = Math.max(Math.min(n, length), 0);
    var last = length - 1;
    for (var index = 0; index < n; index++) ***REMOVED***
      var rand = random(index, last);
      var temp = sample[index];
      sample[index] = sample[rand];
      sample[rand] = temp;
  ***REMOVED***
    return sample.slice(0, n);
***REMOVED***

  return sample;

});
